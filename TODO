* Test parser with CRLF newlines. Make sure CR does not get into tokens
  when buffer_size=1 and buffer_size=whole_file
* Test checking for EOF in random places.
* Run every test with every possible buffer_size
* Make sure it works when no meta information lines are defined.
* Test that files without a newlines at the end of the last line parse OK.
* Parse integer tokens in the tokenizer.
* Define tokenizer.AtEOLOrEOF
* Fix return x_MissingFieldError(s_HeaderLineColumns[m_DataLineParsingState]);
  -- it will return #CHROM
* Check that field skipping works properly
* Detached header mode to parse the header and the data lines separately.
* Move m_Accumulator to
  VCFScanner::PrepareTokenOrAccumulate(string* accumulator)
* Test that every PrepareTokenOrAccumulate call correctly processes EOF & EOL
* Check that integer overflows are detected
* Test the situation when there are no data lines at all and the header
  ends with: 1) EOL and 2) EOF
* Add a feature to skip genotypes that are not needed
* Allow asterisks in ALTs
* Search for TODO items in the source code.
* Get rid of macros in the implementation to increase test coverage
* Test line skipping
* In unit tests, merge plan with expected.
* Do fix the discrepancy between expected and reported line numbers
  (especially in errors).
* Keep track of current byte position in the stream and have a getter
  to return it.
* Whenever "return eNeedMoreData", it's a possibility of unexpected EOF
  error. Check for EOF.
